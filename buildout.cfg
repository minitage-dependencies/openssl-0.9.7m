################################################################################
# MINITAGE LIBRARY PROJECT BUILDOUT
################################################################################
[project]
eggs-directory=${buildout:directory}/../../eggs/cache
develop-eggs-directory=${buildout:directory}/develop-eggs
directory=${buildout:directory}/../../
dependencies=${buildout:directory}/../../dependencies
parts =
    part
[buildout]
python = python2.4
versions = versions
executable = python2.4
parts = ${project:parts}
hooks-directory = ${buildout:directory}/hooks
parts-directory = ${parts:directory}
eggs-directory = ${project:eggs-directory}
develop-eggs-directory = ${project:develop-eggs-directory}
develop =
    src/minitage.recipe.cmmi
[python2.4]
executable=${project:dependencies}/python-2.4/part/bin/python
name=python2.4
[versions]
hexagonit.recipe.cmmi = 1.1.1
hexagonit.recipe.download = 1.2.0
setuptools = 0.6c8
[parts]
directory=${buildout:directory}
[zlib]
location=${project:dependencies}/zlib-1.2/part
include=${project:dependencies}/zlib-1.2/part/include
lib=${project:dependencies}/zlib-1.2/part/lib
[ncurses]
location=${project:dependencies}/ncurses-5.6/part
include=${project:dependencies}/ncurses-5.6/part/include
lib=${project:dependencies}/ncurses-5.6/part/lib
[flags]
ldflags="-L${zlib:lib} -Wl,-rpath -Wl,${zlib:lib} -Wl,-rpath -Wl,${buildout:directory}/part/lib -L${ncurses:lib} -Wl,-rpath -Wl,${ncurses:lib} -Wl,-rpath -Wl,${parts:directory}/part/lib"
ldrun="${zlib:lib}:${buildout:directory}/part/lib:${ncurses:lib}"
cflags="-I${zlib:include} -I${ncurses:include} -I${ncurses:include}/ncurses"
[part]
recipe = minitage.recipe.cmmi
url = http://www.openssl.org/source/openssl-0.9.7m.tar.gz
md5sum = 74a4d1b87e1e6e1ec95dbe58cb4c5b9a
configure-options =
    shared ${flags:cflags} ${flags:ldflags} no-fips
    $(bash -c "if [[ $(uname) == 'FreeBSD' ]];then echo ' FreeBSD-elf';fi")
    $(bash -c "if [[ $(uname) == 'Darwin' ]];then  echo 'darwin-i386-cc' ;fi")
    $(bash -c "if [[ $(uname) == 'Darwin' ]];then echo '-mmacosx-version-min=10.5.0';fi")
pre-make-hook = ${buildout:hooks-directory}/setenv.py:patchopenssl

